description: >
  Continues a pipeline in the `setup` state based with static config
  and a set of pipeline parameters based on the changes in this push.

executor:
  name: default
  tag: << parameters.tag >>

resource_class: << parameters.resource_class >>

parameters:
  mapping:
    type: string
    default: ""
    description: >
      Mapping of path regular expressions to pipeline parameters and
      values. One mapping per line, whitespace-delimited.
  config-path:
    type: string
    default: ".circleci/continue_config.yml"
    description: >
      The location of the config to continue the pipeline with.
  circleci_domain:
    type: string
    description: "The domain of the CircleCI installation - defaults to circleci.com. (Only necessary for CircleCI Server users)"
    default: "circleci.com"
  workspace_path:
    type: string
    description: "Path to attach the workspace to"
    default: ""
  resource_class:
    type: string
    description: "Resource class to use"
    default: "small"
  tag:
    type: string
    default: "3.8"
    description: >
      Pick a specific circleci/python image variant:
      https://hub.docker.com/r/cimg/python/tags

steps:
  - checkout
  - when:
      condition:
        not:
          equal: ["", << parameters.workspace_path >>]
      steps:
        - attach_workspace:
            at: << parameters.workspace_path >>
  - run:
      name: Determine base-revision
      command: |
        GIT_STATUS=$(git checkout << pipeline.git.base_revision >> || echo $?)
        BASE_REVISION_TEST=<< pipeline.git.base_revision >>
        if [[ "${GIT_STATUS}" -ne 0 ]] || [[ -z "${BASE_REVISION_TEST}" ]]
        then
          echo "Using BASE_REVISION=<< pipeline.git.branch >>"
          echo "export BASE_REVISION=<< pipeline.git.branch >>" >> ${BASH_ENV}
        else
          echo "Using BASE_REVISION=<< pipeline.git.base_revision >>"
          echo "export BASE_REVISION=<< pipeline.git.base_revision >>" >> ${BASH_ENV}
        fi            
  - set-parameters:
      mapping: << parameters.mapping >>
  - continuation/continue:
      configuration_path: << parameters.config-path >>
      parameters: "/tmp/pipeline-parameters.json"
      circleci_domain: << parameters.circleci_domain >>
